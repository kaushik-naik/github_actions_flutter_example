name: "Build"

on:
  pull_request:
    branches:
      - dev
      - main
  push:
    branches:
      - dev
      - main
  workflow_dispatch:
    inputs:
      flavor:
        description: 'Select build flavor'
        required: true
        default: 'qa'
        type: choice
        options:
          - qa
          - stage
          - prod

jobs:
  # Job 1: Request QA Environment Deployment (with protection rules)
  request-qa-deployment:
    name: Request QA Deployment
    runs-on: ubuntu-latest
    environment: QA  # This will trigger the protection rules you've set up
    outputs:
      deployment-approved: ${{ steps.approval.outputs.approved }}

    steps:
      - name: Check Deployment Approval
        id: approval
        run: |
          echo "QA deployment requested and approved!"
          echo "approved=true" >> $GITHUB_OUTPUT

  # Job 2: Build (depends on QA approval)
  build:
    name: Build & Release
    runs-on: ubuntu-latest
    needs: request-qa-deployment
    # Only run if QA deployment was approved, or if we're not targeting QA
    if: ${{ needs.request-qa-deployment.outputs.deployment-approved == 'true' || github.event.inputs.flavor != 'qa' }}

    steps:
      #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      #2 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'

      #3 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

      #4 Building APK
      - name: Build APK
        run: |
          FLAVOR="${{ github.event.inputs.flavor || 'qa' }}"
          case $FLAVOR in
          qa)
            echo "Building QA APK - Deployment Approved!"
            ;;
          stage)
            echo "Building Stage APK"
            ;;
          prod)
            echo "Building Prod APK"
            ;;
          *)
            echo "Building default APK"
            ;;
          esac
          flutter build apk --release

      #5 Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases-${{ github.event.inputs.flavor || 'qa' }}
          path: |
            build/app/outputs/flutter-apk/app-release.apk

  # Job 3: Post-deployment steps (optional)
  post-deployment:
    name: Post Deployment Tasks
    runs-on: ubuntu-latest
    needs: [request-qa-deployment, build]
    if: ${{ always() && (needs.build.result == 'success' || needs.build.result == 'skipped') }}

    steps:
      - name: Deployment Status
        run: |
          if [[ "${{ needs.request-qa-deployment.outputs.deployment-approved }}" == "true" ]]; then
            echo "✅ QA Deployment approved and build completed successfully!"
          else
            echo "⏭️ QA Deployment was skipped, but workflow completed successfully!"
          fi
          
          echo "Build Status: ${{ needs.build.result }}"
          echo "Overall workflow: SUCCESS"